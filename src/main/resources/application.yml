server:
  port: 8040

spring:
  application:
    name: backoffice-bff
#  profiles:
#    active: dev
  security:
    oauth2:
      client:
        provider:
          keycloak:
            issuer-uri: ${KEYCLOAK_ISSUER_URI:http://localhost:8080/realms/CourseRealm}
        registration:
          keycloak:
            provider: keycloak
            client-id: backoffice-bff
            client-secret: ${KEYCLOAK_CLIENT_SECRET_BACKOFFICE:hgDVSKURLE6VUsHT09AaZ3YlhYRy1JsF}
            scope: openid, profile, email, roles

logging:
  level:
    org.springframework.security: DEBUG

#  config:
#    active:
#      on-profile: "dev"
  cloud:
    gateway:
      default-filters:
        - SaveSession
      routes:
        - id: user-service
          uri: ${USER_SERVICE_URI:http://localhost:9000}
          predicates:
            - Path=/api/user-service/**
          filters:
            - TokenRelay
            - StripPrefix=1

        - id: course-service
          uri: ${COURSE_SERVICE_URI:http://localhost:9002}
          predicates:
            - Path=/api/course-service/**
          filters:
            - TokenRelay
            - StripPrefix=1

        - id: backoffice
          uri: ${BACKOFFICE_REACTJS_URI:http://localhost:3040}
          predicates:
            - Path=/**

service-uri:
  services:
    user-service: ${USER_SERVICE_URI:http://localhost:9000}
    course-service: ${COURSE_SERVICE_URI:http://localhost:9002}
    token-identity: ${KEYCLOAK_TOKEN_URI:http://localhost:8080/realms/CourseRealm/protocol/openid-connect/token}
  token-id: storefront-bff
  token-secret: ${KEYCLOAK_CLIENT_SECRET_STOREFRONT:hgDVSKURLE6VUsHT09AaZ3YlhYRy1JsF}